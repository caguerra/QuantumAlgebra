(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    137468,       2759]
NotebookOptionsPosition[    106149,       1982]
NotebookOutlinePosition[    135844,       2698]
CellTagsIndexPosition[    135570,       2686]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Installation", "Section",
 CellTags->"qa:I.0"],

Cell[CellGroupData[{

Cell["Installation Directories", "Subsection",
 CellChangeTimes->{{3.443185235175*^9, 3.443185239017*^9}},
 CellTags->"qa:I.1"],

Cell[TextData[{
 "After downloading the ",
 StyleBox["QuantumAlgebra",
  FontSlant->"Italic"],
 " package, you will get a zipped archive named ",
 StyleBox["QAFiles.zip",
  FontWeight->"Bold"],
 ". Unzip this file, and verify that you get a directory named \
QuantumAlgebra. This directory contains all necessary files and you should \
copy it to one of the following places:"
}], "Text",
 CellChangeTimes->{
  3.4437732467723475`*^9, {3.443789977777*^9, 3.443790049443*^9}, 
   3.4437901383459997`*^9, {3.443790177811*^9, 3.443790177943*^9}, {
   3.443790453255*^9, 3.4437904736610003`*^9}, {3.443790512024*^9, 
   3.44379057544*^9}, {3.4437906066359997`*^9, 3.443790640644*^9}, {
   3.4437906756549997`*^9, 3.4437907880550003`*^9}, {3.443790819947*^9, 
   3.443790847191*^9}, {3.44379087871*^9, 3.443791007763*^9}, {
   3.443791137317*^9, 3.443791237685*^9}, {3.443791274135*^9, 
   3.44379134729*^9}, {3.4437914054370003`*^9, 3.443791455625*^9}, {
   3.443791507896*^9, 3.4437915218719997`*^9}, 3.443791554005*^9, {
   3.4437918304230003`*^9, 3.4437918725769997`*^9}, {3.443791909703*^9, 
   3.443791922887*^9}, {3.443795956501*^9, 3.443795966451*^9}, {
   3.506354927848868*^9, 3.5063549281218834`*^9}, 3.594226940284762*^9},
 CellTags->"b:0.0"],

Cell[TextData[StyleBox["Run the following commands to see the appropriate \
directories for your system",
 FontSlant->"Italic"]], "Caption",
 CellChangeTimes->{{3.443791914234*^9, 3.4437919196*^9}},
 CellTags->"b:0.1"],

Cell[CellGroupData[{

Cell[BoxData["$UserBaseDirectory"], "Input",
 CellChangeTimes->{{3.4431838242209997`*^9, 3.443183830642*^9}},
 CellTags->"b:0.0"],

Cell[BoxData["\<\"C:\\\\Users\\\\cesar\\\\AppData\\\\Roaming\\\\Mathematica\"\
\>"], "Output",
 CellChangeTimes->{3.443183831651*^9, 3.44318991569*^9, 3.444467510028*^9, 
  3.5063549481400285`*^9, 3.6296561390354757`*^9},
 CellTags->"b:0.0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$BaseDirectory"], "Input",
 CellChangeTimes->{{3.443183840564*^9, 3.4431838460220003`*^9}},
 CellTags->"b:0.0"],

Cell[BoxData["\<\"C:\\\\ProgramData\\\\Mathematica\"\>"], "Output",
 CellChangeTimes->{3.443183846333*^9, 3.443189916775*^9, 3.444467615568*^9, 
  3.506354952648286*^9, 3.6296561402282696`*^9},
 CellTags->"b:0.0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loading the Package", "Subsection",
 CellTags->"qa:I.2"],

Cell[TextData[{
 "After installation, restart ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (if necessary) and run the following command to load the package."
}], "Text",
 CellChangeTimes->{{3.443792214722*^9, 3.44379227241*^9}, {3.443792557708*^9, 
   3.443792879178*^9}, {3.443792970189*^9, 3.443792979527*^9}, {
   3.443793383495*^9, 3.4437934087060003`*^9}, 3.443793580368*^9, {
   3.443796247038*^9, 3.443796249171*^9}, {3.443796824495*^9, 
   3.4437968254300003`*^9}, {3.506354989741408*^9, 3.5063550032111783`*^9}, {
   3.594226998208565*^9, 3.594227024839408*^9}, {3.5942270574794874`*^9, 
   3.5942270707155495`*^9}, 3.6296561628433475`*^9},
 CellTags->"b:0.1"],

Cell[BoxData[
 RowBox[{"<<", " ", "QuantumAlgebra`QuantumAlgebra`"}]], "InputOnly",
 CellChangeTimes->{{3.443183870116*^9, 3.44318389255*^9}},
 CellTags->"b:0.1"],

Cell["\<\
After loading the package, the notebook from which you executed the command \
above will be modified to contain proper styles for displaying bras and kets. \
These styles appear in the private style definitions of the notebook or in \
the particular stylesheet that the notebook is using. Also, several input \
aliases are added to the notebook to simplify the process of typesetting the \
quantum objects. \
\>", "Text",
 CellChangeTimes->{{3.4437922909630003`*^9, 3.4437923096029997`*^9}, {
   3.4437936081219997`*^9, 3.443793742087*^9}, {3.4437938234040003`*^9, 
   3.443793894262*^9}, {3.443793937624*^9, 3.443793940264*^9}, {
   3.443793981572*^9, 3.443794066251*^9}, {3.443794227526*^9, 
   3.443794402333*^9}, {3.443794443785*^9, 3.4437946875*^9}, {
   3.443794722842*^9, 3.44379497695*^9}, {3.4437950121289997`*^9, 
   3.4437951875369997`*^9}, {3.443795223301*^9, 3.443795231915*^9}, {
   3.443795292729*^9, 3.443795300951*^9}, {3.443795983836*^9, 
   3.443796095406*^9}, {3.443796300685*^9, 3.443796324209*^9}, 
   3.4447740575058002`*^9, 3.594227108483204*^9, {3.5942271472604218`*^9, 
   3.594227151812682*^9}},
 CellTags->"b:0.1"],

Cell[TextData[{
 "If you are not using a notebook\[Dash]based front end, no notations are \
loaded at all, but you can still work with ",
 StyleBox["QuantumAlgebra",
  FontSlant->"Italic"],
 " using the full form of all the quantum objects. "
}], "Text",
 CellChangeTimes->{{3.4437922909630003`*^9, 3.4437923096029997`*^9}, {
   3.4437936081219997`*^9, 3.443793742087*^9}, {3.4437938234040003`*^9, 
   3.443793894262*^9}, {3.443793937624*^9, 3.443793940264*^9}, {
   3.443793981572*^9, 3.443794066251*^9}, {3.443794227526*^9, 
   3.443794402333*^9}, {3.443794443785*^9, 3.4437946875*^9}, {
   3.443794722842*^9, 3.44379497695*^9}, {3.4437950121289997`*^9, 
   3.4437951875369997`*^9}, {3.443795223301*^9, 3.443795231915*^9}, {
   3.443795292729*^9, 3.443795300951*^9}, {3.443795983836*^9, 
   3.443796095406*^9}, {3.443796300685*^9, 3.443796324209*^9}, 
   3.4447740575058002`*^9, 3.594227108483204*^9, {3.594227142427145*^9, 
   3.5942271626853037`*^9}},
 CellTags->"b:0.1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using the Palettes", "Subsection",
 CellChangeTimes->{{3.5942271841951833`*^9, 3.594227191073942*^9}},
 CellTags->"qa:I.3"],

Cell[TextData[{
 "After loading the package two palettes are laoded into the front end: ",
 StyleBox["QAPalette",
  FontSlant->"Italic"],
 " and ",
 StyleBox["QANavigator",
  FontSlant->"Italic"],
 ". The first one contains usefull constructs  to enter them directly into a \
notebook, the latter contains links to the full documentation of ",
 StyleBox["QuantumAlgebra",
  FontSlant->"Italic"],
 ".\n"
}], "Text",
 CellChangeTimes->{{3.4447740697938004`*^9, 3.4447740725808*^9}, {
   3.594227202196099*^9, 3.594227386146614*^9}, {3.5942274187612066`*^9, 
   3.5942275040121603`*^9}, 3.5942275605147057`*^9}],

Cell[BoxData[
 RowBox[{Cell[GraphicsData["CompressedBitmap", "\<\
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
ifVFLLURmChzt3IvZG0crJqvHaZsbvAVpLI0sD7FIEzXzCAs68pujNiQLRDs
Rq82Y+zEFPpMi/qQ4704v6YTH+vUi12xbMbfU23GPnUJTn/VLqxsqiuubfbj
D9T6fBVOZrTtt85hJhRVs0cp7lq+gsiqa5kc2XWkTsRAHHLYp3kTvu/RLEva
SK96M6NOlL/iWv5C+Hw1vZd14KuSa1/SW+j3kmSyU6qHVJMdN7laJjtexlGm
a8q+79FEZx10HdUHg4ZdL0x0rcxEsqB2fywT3fd7b6ILKKs2SE/u3hg5xliY
6bhNjaMV9jlhs+MmvcjKD6Xs+x5ta24Hfl8nbGstzK72Qq3xlVna1v4qTtua
XF7ArVi65QU5MFrY1S63auQoxpecsCjOGW0zzX3faAuLmlXKtUcxDxStn1lB
77mtbDTEaP0Sj/Y39qWFDwOysDk+wiXRcvoaIKKuXU5XS4x2sOhDcnXHv9rl
/DzK+UV3OcdjQTITHSwG2dwqHm5K32S9tiB5OzoWiYpv7HnVPP5zYYN2duuN
Ccl0AixOqeIbewF260Js5WL9Q743JiQiqju4NfKNvbABX84au+Fl+wtuIiYk
N6L8rZARxDfCV1psRM0HldZHHfEZ+ex9peUgS6+29sREhoj054XKT1JEgiOe
cvtHVHxWpN5RXRJFNT47kv7Ey95T7Y0lyXzOpleqvTElEVV2jGTUsTmS6hIP
VOO1JVE7k0OVLEA/0huThsZlTLrNaExyPtQM5zzGw7k0zfxQY0y6yqMx6TaP
xiR58l70wUi94fi2XhmTgooxibXUCs6Mti+JexnWPULHyFjVPVuI4usj3eFR
8fYRWU9+0GsTUZbdRLRikmLH4eW8rsMclJ6w2ec2j2Yf0ylbaWpHsbTU/kzR
mX1u7ZXZJ6CGhVrwVvBvpJ64l56wTec2z+GShsOj7Eq01FWJpE3n1t7adAKq
TcdnD7EUcY42Q06GgI1psHGz19zmOQLRcJBJvF1Edo1bjfaaDK/2Gh4cONgC
9/l8DkNKlJ3GEIro2SZzm2ebjLarIiNtqRhlS9uMI03aZG5Nlk0mEpgXlLFu
UTYYBiLDtLj5JcrU4mZpuc1oaembDqKXtFuTHxuVLmOenLFtMYwstxmNLM7m
G44/sZrfxoZSm9tQkkaWH/RZHFSqxByxswjM7jaW2zzaWOTBDs719GlqP7C0
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
oHSN3MRcI2HVNcI4U2G+6wHmxxoXixv3Mx3cx5wPrlQeGdLDcjPLQ6qHRd73
fc/l3k80npkhGmbZUTDErHVSUNRU2KafClVupWfmZpaHVLeFvC92FtPf+4nG
e6PntgVTk3Ku0eDr7Q/G5e097KHoeFromA3IfMntcPuSdnaVZd3ZCeNvuR2W
4FU/C248uZrYVZDl6brG0B1b/UxN/XQN7QwNbb9LpwU94higKdPxFIxDCPNQ
bVyE0CaE0OYqBOkkozwfH9lLOzvZVZZ1Jx8m3ML8YSgEUZY/Ae6YkG850zoN
QuhkuCL1MzX10zW0MzS0+dFKJiF4wzFAU6bjKahx/JnG7Vyc32eWRk0ytldE
EoRRCNJl5rccYQUw8U62Qxt2uFI2nPt3+mng+LKadNX2r+K21c/U1E/TlGVq
aMulOho6voBHHAM0ZTqegho/lk4IdArY7DL8vrYWfVpLHOXnF3slerXF9JxS
HVnWwTSFk2Ak9/Jgj4sy5qji3pb+oqxw0kjp2fHJQ2N0UuDemkj9LE39sIZ2
poY259EkBW84BmjKdDwFNF4lvRQaYU55AzvbT5UCvq9dz+0oixs6earfbxoK
0qkkTykpmjxSelJ8AZkLL43PMvOHFReJ6qlR13Ho6gXUehZNghs+uUihma5a
WlU+bXT8Rjqp0fxxGmlxNVP1BDnJhnQsWrhU/N7ZtGgEPfagBZdYr0g0qnlb
q3E43meXoMY5FhkrGlfXDovqO2BRXUe0xplOTOJ8m9ucZG3rkW7MZGmbjr8I
jVSNjMxtjV/l/Br85j65yCrn3jWSzVh6Nwv1bdbeOnaSqV3vhlzH3SoLqltZ
eqG6NVrvUlWXasTneddKawe4yPZqFt8RT6BM5PNUPbC6egG1ngXHfKfcS+mT
e7PpVM5Jx++RDofLUOkorl3HAi23ZqsOUCcbJu1THNTc2+zSPWmObhU0Imya
W5xhr+psWYTd+DpNJ5zYCjmzeB+mGphhHW0sFfKKa69nCjkPvy15anZTyCNH
bJ5Ta5M5sXObqpARv6RM5Ojl/smAsV5ArWfBkStUlPv84iwfnUI66fg90vFr
6KhtE45hsbucDp/qh3XSN2liNH5zv6Q6+tOiYWbJ3kQLLkndozsKSad60wsr
4dmiKphWUCFV79obmOoNHnYdU705ZfUwt7yO/TeoXtRJSKOyrS3myAvrUD3b
EizL2aw6pHX1Amo9Cy57lOVEFjuwpateMQd7ETp+j3T8Gjq27fO4yxjlZ8Kn
On+d9EM6XiO8KfjN/ZLq6E+LhpklexMtuCR1j+7MI53qkcpNQ/WbttupeoOu
4ar3XDE9qKvZC6Lh9S/6zCPuPQ5Kj7JW/z5U6tjrBYz1Amo9n1/1WI+YCfVW
Xb3+Oen44+IvQiMVVP99rLaGFFxO2ibdi8Zv7pNUB69WHTNL9m4Masj1tmsk
m7H1Dqe8wiqYapzySN/m7K2F2ZgMH7oynkIyWz9zlAyGECsJ7Y3qrzSK4ik+
jFNfsjT1wxramcYO1cs74BHHAE2ZjifvQqDBj8+d3eUGIcxiQsAJoMRVCJFD
uvg+hnfPanScgkWBGzxsor8oa5x1t4zO8PFgDr0QIoEfvH6Wpn5YQztTQ5vz
aBKCNxwDNGU6ngKa8BCdEJ7dUwkz9lSxEWF4+Jfgg7+0FlOdSQgy7EGejMV2
SRzNdkZEIShlI1hMhr1MwPEdFtPVMAIVt61+pqZ+mqYsU0PbL0JYNHR8AY84
BmjKdDwFNWEg2pf/on0wCz8AZuyxXv6v5dZP5eUfOZ+Pudn6KcNAAiJvnjMH
crF1dJVl3WmGOT8cTeUoBVHWPAdGz2lmV0GW66VwnuGK1M/U1E/X0M7Q0OYO
Wb0Ugh5xDNCU6XiS+GJJYVZxNaaaKClEbAIv1bRhamX/XYYCj4cRed5oGJ13
gV1lWXdaGMN5eNXPgpsDc1o4XJDleiHgHVv9TE39dA3tDA1tPyszCcEbjgGa
Mh1PQU2UkNYgiM9bmnFmRe06GDEI0q5ni+ucoXw6Kdzs0sLvudz7iUdu55U3
wryKJvZhpOf25Xraae6VBudOcyq3MqjpZpaH1KAmeR+5Nd/7iSYYaojAr3CL
fLxQ1ZRCFn5rb0Wu39LHsrS5G9MBWNKs9aarsVA3MYxhNRbKcvNLmO96gPmx
JqZKFwqwsBqHHab5Vc2GUIDlLd0sLdOHAqghVTexbgurIVWMMRXmux5gfqwJ
zdIxv6imHRbSFrlVrU4/rzxArvUgS46T7WQcjBqaJeNg1NAsvwbuOx7hfqSB
00qAGrGvjRlF9X7SSCNiBmcRskU4i75gRtbWw5OXs/4W0W7HyFjUnqG24/k8
xaAtqu2AxXQ4tAtn1MxuL81cLJC96ECmssa2+IwKvzFhe7m2nY0DJ2tim9K2
bsLI2IvB2ssxka1o60JEXdjO/TGR1XXAK+7IWgnZfkydKrLvCnGqgVkDNYFZ
AQ3clRcB7juaxr4iGruwJrqxYnvRtk5saAf2nM1n9R1BVA3kGqQJ5PJr4IZe
BDhTY1+t44PVsJdqGz2Pl0WtP5GtVQO/BmkCv/wauKEXAU7X2lc9tJZW2yxv
dS64kq1VI84GszzVFlUmn9tYdlUSbtvD0m7WNGlJfScsqaNpqC1KW8V+oa2t
LC1rbdFpqxroNZjlqbb4HckTll2VhNv2gJ34WiQ3HljR3oqCwhS7RbrQtQzB
pxLmxULRBGPy20VBw9LO8bf4pM3Nd8t42CnKBWoRKRYDrZ27tEuGO91oWdrQ
Ccsx0YjRCyL/2GHIP3oYdh095CYIU/gaD/9KVUO9WDiaoamd4nb+BLWpEyDf
Kp+gRIvFQGvnLu2S4U72nf0FaFfP8RTY0X3c8QIk5XD0PBk+jp7/yGXWcgth
46FdqWq4FwtJEwFFalMj0Wpso4VIU63zSuNEqztN9VLgTi+II2cvpMDhs+cN
gjjNgE6zTx43QZii2DJt2y1E9hUwNLU7sr2CaGrQtr0Bos3ygtHOmDnE7SIy
pu/+Uxc+SYGTFz62dX9kPjrzycc8YSXDfOQWvmaOSkk3BcGwa+GB9fk1dMJ/
oROTjl7Wpz9GWTOBa2WNg4ylUzpZuweOmYOdet8vuqCtv9DRydn+koECxvQx
DWrDS4YU8qmPL0QL2hipFTQG9aTrQ4rEtalP5A4a3kOX/jzpmOZtnLJPnv/Y
8NhE0RLQxxe0j01j8JM58ibdFKzDrk19IneD9h4U9OdJRzuOz3/MxvGJ8x87
Pq2lkE8yIZ90FbImzMgc45JuCoth18IzausUuU9GalzhN3+edPQDmY3hE+dM
L2AoXZZOXNDM1e7hPOYQlHRTCAq7NvWL3I3Ce6jLnyedOOQcGcsnLpCzgXLz
d45b/Eym1RwtU7q2m0NhYqAJRald/cwRka8SHlok0WZdbIz67mc9f/wj0zA7
ceEcHKd0/pzpO8ctcCbT2o7ECjJhgTCG3nePgYmBJqSikZulKH3FNk2RaLMu
NkZ97x+n3j/20QWD8h9n1pZj58+5KL9byEymtWuKFV7CQmCEN9qvQRPuLZqQ
ioal5tmys0LyeNNLAK3uleLYR5QuwFFM+k+DY+c/YukoJsM4cIuayRBvHkqE
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
6aLH4i7oYMN1+Rk5SUZjn2Q19Ut2cz/Q0y85VwbkWBSKclsHgYYTbeFYdMOA
3HEyEE6eoLRB2sFG8Gf5mMj5CDdPAjSnMLExwXEhzJuI7rifx/E4ORbHtMji
3LfgM4A8xKgxKzQhz2kzXJB9ZUjdCAOOQ4hcD+Ad0xq4W8PhBVZHgYNvnISd
udSX6loUB1GmTSZVGyi4pSNXWDmyPADMizpc56FhR8T0cyzPcVrfsXyEKuzo
SujC9o6ngS2PKmjl7lja9PmnhJ/76kOyH5/gwK8hOdTQK+m/XZfDjb0w4XXJ
hGSBBDK50QUdPDS7qU+HzFEWN79kNfb5qQozZjV6Z9X2R8AeR64YBsnB3Mtp
HdTVO8xH8NPxdrDDMW3atBm2oYHmaOtwEm3m44SFGbmewroK6ZzmS4f5OIX3
M27ENOYioJqxjmYMyrc1AWNGnc4mQkh1iHiXs6A3f1rb8205bzLPCw4sN8E1
PZMvWB7Vc4bGLTZr/5cVXcKv6uZSYM+Kp5hyb21AfqoNQgKyry4gafVBmDYo
ByAHaV7IQe43QcfPERuH2gTBA+hi/oYknSDgPG6kwL4ZTdyfl4lvnolvn9ky
GLOcLWzePGhzzA+VsC2Hm8JxzAkt2ge5E2u5Bx05AFJgsSLNsdaP9SaOI/l+
Vxux2u5oqxki9rmfNmoNIWIby2HfnV6FwqFdflqzd0GpeJ6jtt2pWOmgwohr
Rl1FpsdGBmnMyOnX7ppxLvVqEqm+OpEX+eaajner6tY70mlzFa1n5RNGtNSI
dX/e0wraNNslsmfolnseedzqTRL78gaJf+U1SVj9uiS++oYkrXlTnlm7Cf/c
0nVv4R7L1r8tz25QwdHyje98KM9tfFd7Ph1cripQVsGlegveirfkrfkI/yrI
S+vFfnGdWC+sFZ/KGlmycs0evs8Svgxeasm/yVRpTA==\
\>"], "Graphics",
   GeneratedCell->False,
   CellAutoOverwrite->False,
   ImageSize->{179., 387.875},
   ImageMargins->{{52, 0}, {0, 0}}], Cell[GraphicsData["CompressedBitmap", 
  "\<\
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
rR8RMIIrIigEqyJyuCLKklWEk+Xztu8gFIwOnSnUVPuEsS1xGDEZjAjTBL5B
MM6rrhbdW6nEIVdHp36GOgQON2LkCGKUaTgiv7MVLZS9LmwQXB0ELqrF5zh0
81sJrttNtRRRHEUua2CsioFY12GWwPXBO5/Byy++xr41M2eYlvHnbKOyaC4C
LcWsqQ+krbUPJPkeGenvTBMxTR1DYtA/y/q6/LOoNstSnO78nVlkMxclxEmd
ZY5XM0ddwm2SqrWzyRyHdWIAT062e93EOuchZq5B55u72hpZ6gbu/WDmalJn
q9EDJslVhn/1Zv0AWUC5LQvIFBjePPMePPnkkzBt2gw4eez1pjaeUc7AZ6Nd
bKuNWWtmnv1VYfWfeUzJMr2nJuFWRnIv8SsuWPLCmnHsLpMnqZF3T6DVvUSS
L5NO0rO4s0cPpicDEp1Mbe8l9a/qyI/HydJ1J9PCrJlz6F5jCft4VtfVuHe1
NVf27HkMuS/H1u8ipnOlu3lTuqszpbtFyR83DYTc8fM4E8YNftmLESMHkEy1
ldFQuAv/TXepWPrst/PF05ZJ5AYJciIlHuNoU7p5zBUmj1HNHoPf+HXe3AWs
FiiydwfXNP5pJbQxsdJYZiLtEQ65h1pwXEzjzzZXfJzx+3GfqD1qHnOTwB24
Bqr4SwKcc9sNLzY6btm7rj5k4anMh6ydoqpW8vrtV/Yy6k/Af5zdAPN2MP8R
XSHoPY5uAN19KFC7148HxYQHLV2yAj5+/xx7I0PSouD140zrsjZNWXZ7nyfv
w09tGWSPU3DGd5lkpNLUq+hPVKKFlPPdBGpD2pBOesLFlczVsv26Gs8Azpdb
/CfgaZKSijxN6+bCUipOSeXPz6LCz0aPHgMH970I33/zfxsd0o5K3kWm5AcY
hQl5VCgOIyMN0ZxKOH1hLfZxX8SjN6c8ZwCkqmzzrhsGWceUpKoDe5ytV7c7
8zjex896dXWPi3h3BaLjaW6nV/rMLqcIl3v22RGwc/te+Nu5f1K25kJDY/2l
20wOY4Qty3MEzzralxtotM9jZC4airfl+BHlM2mmgUyveOSDifBPHwOZ5j5R
VaubxF2KlmHppbN5sYinsWd1w97Th+9qnciOGok8WRxJM8uwq2fR5qpla/eo
1jkXoredX1ubkLdZOy+efvpp2LRhK3z12feyzosu2j0TS7ODVdAMElujkY31
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
ocIWFBRIdl2DuimCnNwn9RtmSXtXNE1IjxWSFIZ5r8Pa7AdaHjbCce1rkESx
m6RxZ4YM9D4MtbRV60nLlZaWZWmPwn6kVKMNZmlZ/J5DRyMkr0Y5QJZAqy1L
HWKEoGPOKVMHytKGUKEJNpYY09IsKAyUB0MEZfbUgJx8tZgycpo9zbiB+vl3
4Ts1yvKBVkT3EFe7IbJyp6Go0tI3UyJJa89QiW809QE5OXimTB7guHqGmeOt
Vk7OmCkTA11dIpElhzUanL+pQ821W3fCnG+Q5Io6WbGxQhau38jVc5mRk6/r
ypNSDTWpzFJQ6noYheTiENcPhaQNO1Uh+WP01u918wflo5ut45Th8wMC0hXk
pOqrnkCw3JuOhCTcbTmpIY4hXp6AaFQXv+tKJWSvqy6VykVx4h/QSzIG9JRM
IOfhnpI7sKfkA+sH3yeFQ+6VEqAUKBt6r1Q9StwttQBo55HW1lbDQJk94nF5
Ekw0dVdoHU/lJby01DbFJtl0/iB0BeTYrjkEP1C1OE6HFsLHm7cfd/joM3w8
6/AxLfAIaj8m0siZcZKVlSl7yytk3113Sx2kf2PXG6Tl8fvlxNpIeW/eH6Xg
/t/Jxv/sIiceuUe+gEA+uX+vnGneqWTkUgKXEeicL27crRH7VTWrpT9YM7bg
HX1FID0pO9QbY3w9EUnbZIfqjAAMxHDXFFkCoertnywbD9r6Qztl+VCv9Jky
XfrRH1R0OODBoXFp9718EWUH9uAyr0Xcpt6ZQ7gLofRJw/6D+EkaCoNKJxrn
61T5HzQeNt4Z7l2m5Q36glN6WsJnlml/26Cz8hEaTIKosp6WDfie/L45kFf+
6npdTltWXK4Lx7PXrtfF4uj0XJVZ41cbm33Mm8lKDJVXi1ZeJK8G6/LXzw6y
/k5yjLDkMOtf3+Vccaw6b1tm4FekoHrWWd4LrIddsNLLCDjy474r2kvFvJmS
0udOt/gj7oCilxlxh+REdJe1fbpLPlAIFPftLpuAsge7SwVQ9dBtUgvMHjZU
JZNHPvjgA9cvlA/Hjx/nnkI5g3N4Pq/j9WyH7RXa9tlPDpDZ5w4zBK+kYAiV
82bo6IKG3e+2HwVDfnGlWbIAQ06TIeZ9A14lRxcZOHa8rFixQhKefVr+Ul8v
byeulk23XCdnkkbLt8fj5Xzuc/L5qLukvlsnqeneXc6dOydff/21nD9/XsmR
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
BOia6HSjM0iXx4zf1e7/AGohgps=\
\>"], "Graphics",
   GeneratedCell->False,
   CellAutoOverwrite->False,
   ImageSize->{156.9375, 384.0625},
   ImageMargins->{{75, 0}, {0, -3}}]}]], "Text",
 CellChangeTimes->{{3.4447738159098*^9, 3.4447739729038*^9}}],

Cell[TextData[{
 "Loading these palettes can be avoided by setting the following flags before \
loading ",
 StyleBox["QuantumAlgebra",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.594227571315091*^9, 3.59422757689141*^9}, {
  3.594227645696292*^9, 3.5942277540377192`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AutoLoadNotationPalette", "=", "False"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AutoLoadNavigatorPalette", "=", "False"}], ";"}]}], "InputOnly",
 CellChangeTimes->{{3.594227598059621*^9, 3.5942276030259047`*^9}, {
  3.5942276878489556`*^9, 3.59422769421832*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Requesting Information", "Subsection",
 CellTags->"qa:I.4"],

Cell[TextData[{
 "These are the new symbols loaded by ",
 StyleBox["QuantumAlgebra",
  FontSlant->"Italic"],
 ":"
}], "Text",
 CellChangeTimes->{{3.4437922909630003`*^9, 3.4437923096029997`*^9}, {
  3.4437936081219997`*^9, 3.443793742087*^9}, {3.4437938234040003`*^9, 
  3.443793894262*^9}, {3.443793937624*^9, 3.443793940264*^9}, {
  3.443793981572*^9, 3.443794066251*^9}, {3.443794227526*^9, 
  3.443794402333*^9}, {3.443794443785*^9, 3.4437946875*^9}, {
  3.443794722842*^9, 3.44379497695*^9}, {3.4437950121289997`*^9, 
  3.4437951875369997`*^9}, {3.443795223301*^9, 3.443795231915*^9}, {
  3.443795292729*^9, 3.443795300951*^9}, {3.443795983836*^9, 
  3.443796095406*^9}, {3.443796300685*^9, 3.443796357006*^9}, {
  3.594227774519782*^9, 3.5942277902988987`*^9}},
 CellTags->"b:0.1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "QuantumAlgebra`QuantumAlgebra`*"}]], "Input",
 CellChangeTimes->{{3.443184285842*^9, 3.44318429091*^9}, {
  3.4437953564820004`*^9, 3.4437953599379997`*^9}, {3.443795447868*^9, 
  3.443795448802*^9}},
 CellTags->"b:0.1"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["QuantumAlgebra`QuantumAlgebra`", "InfoHeading"]}], True->
   GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["QuantumAlgebra`QuantumAlgebra`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["AutoLoadNavigatorPalette",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "AutoLoadNavigatorPalette", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QAClearCommute",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QAClearCommute", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["AutoLoadNotationPalette",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "AutoLoadNotationPalette", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QACollect",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QACollect", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["BCHRelation",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "BCHRelation", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QACommutatorContract",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QACommutatorContract", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["Bra",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "Bra", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QACommutatorExpand",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QACommutatorExpand", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["BraArgs",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "BraArgs", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QACommute",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QACommute", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["Braket",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "Braket", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QACompute",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QACompute", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["BraKetArgs",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "BraKetArgs", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QADirac",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QADirac", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["BraQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "BraQ", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QAExpandAll",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QAExpandAll", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["Commutator",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "Commutator", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QAMatrix",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QAMatrix", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["ConstantQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "ConstantQ", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QAOrdering",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QAOrdering", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["DoTensorProduct",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "DoTensorProduct", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QAPowerContract",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QAPowerContract", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["ExtendSystem",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "ExtendSystem", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QAPowerExpand",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QAPowerExpand", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["GramSchmidtVectors",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "GramSchmidtVectors", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QAProductExpand",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QAProductExpand", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["Hermitian",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "Hermitian", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QASeries",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QASeries", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["Ket",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "Ket", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QASet",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QASet", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["KetArgs",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "KetArgs", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QATrace",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QATrace", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["KetQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "KetQ", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["QuantumObjectQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QuantumObjectQ", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["Operator",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "Operator", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["TensorProduct",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "TensorProduct", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["OperatorQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "OperatorQ", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], 
         ButtonBox["UDScript",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "UDScript", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"]},
        {
         ButtonBox["QAClear",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3594209794-9131938", {
            "QAClear", "QuantumAlgebra`QuantumAlgebra`"}},
          ButtonNote->"QuantumAlgebra`QuantumAlgebra`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.475]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{3.594227794859103*^9},
 CellTags->"b:0.1"]
}, Open  ]],

Cell[TextData[{
 "You can request information about any symbol by typing the command ",
 StyleBox["?",
  FontWeight->"Bold"],
 StyleBox["symbol",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". Input aliases are printed for objects that use them. For instance, the \
following gives information about the Ket obeject:"
}], "Text",
 CellChangeTimes->{{3.44379559019*^9, 3.443795614633*^9}, {3.443795659551*^9, 
  3.4437956943059998`*^9}, {3.443796557111*^9, 3.4437965977460003`*^9}, {
  3.443796779406*^9, 3.4437967910360003`*^9}, {3.5942278103433204`*^9, 
  3.5942278686671686`*^9}},
 CellTags->"b:0.1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Ket"}]], "Input",
 CellChangeTimes->{
  3.443185492322*^9, 3.443186043198*^9, {3.443190394242*^9, 
   3.4431903948710003`*^9}, {3.44319051884*^9, 3.443190520224*^9}, {
   3.443190573591*^9, 3.443190574051*^9}, {3.443190944804*^9, 
   3.443190946038*^9}, {3.4431918368599997`*^9, 3.443191837297*^9}},
 CellTags->"b:0.1"],

Cell[BoxData[
 StyleBox["\<\"Ket[A,...] is the internal representation of ket with labels \
A,...\\nKet[A,...,{x,...},{}] ket with labels A,... and subscripts \
x,...\\nKet[A,...,{},{y,...}] ket with labels A,... and superscripts \
y,...\\nKet[A,...,{x,...},{y,...}] ket with labels A,...; subscripts x,... \
and superscripts y,...\\n\\nALIASES \\n[ESC] ket [ESC]: ket\\n[ESC] ketd \
[ESC]: ket with subscript\\n[ESC] ketu [ESC]: ket with superscript\\n[ESC] \
ketdu [ESC]: ket with both scripts\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.44443058831*^9},
 CellTags->{"b:0.1", "Info3444434187-6347518"}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{771, 965},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
DockedCells->Cell[
  BoxData[
   StyleBox[
   "\!\(\*FrameBox[\"\[CapitalPsi]\",\nStripOnInput->False]\)   \
QuantumAlgebra 2.0", FontFamily -> "Helvetica", FontWeight -> "Bold", 
    FontColor -> GrayLevel[1]]], "DockedCell", Background -> 
  RGBColor[0, 0.25098, 0.501961]],
ShowSelection->True,
InputAliases->{"ket" -> TagBox[
    RowBox[{
      AdjustmentBox[
      "\[VerticalSeparator]", BoxMargins -> {{-0.2, 0.}, {0., 0.}}, 
       BoxBaselineShift -> -0.1], 
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      "\[RightAngleBracket]"}], QuantumAlgebra`QuantumAlgebra`Ket, BaseStyle -> 
    "KetWrapper"], "bra" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      AdjustmentBox[
      "\[VerticalSeparator]", BoxMargins -> {{0, -0.2}, {0, 0}}, 
       BoxBaselineShift -> -0.1]}], QuantumAlgebra`QuantumAlgebra`Bra, 
    BaseStyle -> "BraWrapper"], "braket" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      AdjustmentBox[
       RowBox[{
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs, 
          BaseStyle -> "BraKetArg"], "\[VerticalSeparator]", 
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs, 
          BaseStyle -> "BraKetArg"]}], BoxBaselineShift -> 0.], 
      "\[RightAngleBracket]"}], QuantumAlgebra`QuantumAlgebra`Braket, 
    BaseStyle -> "BraKetWrapper"], "ketd" -> TagBox[
    SubscriptBox[
     RowBox[{
       AdjustmentBox[
       "\[VerticalSeparator]", BoxMargins -> {{-0.2, 0}, {0, 0}}, 
        BoxBaselineShift -> -0.1], 
       AdjustmentBox[
        TagBox[
        "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
         BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
       "\[RightAngleBracket]"}], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]], 
    QuantumAlgebra`QuantumAlgebra`Ket, BaseStyle -> "KetWrapper"], "ketu" -> 
  TagBox[
    SuperscriptBox[
     RowBox[{
       AdjustmentBox[
       "\[VerticalSeparator]", BoxMargins -> {{-0.2, 0}, {0, 0}}, 
        BoxBaselineShift -> -0.1], 
       AdjustmentBox[
        TagBox[
        "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
         BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
       "\[RightAngleBracket]"}], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]], 
    QuantumAlgebra`QuantumAlgebra`Ket, BaseStyle -> "KetWrapper"], "ketdu" -> 
  TagBox[
    SubsuperscriptBox[
     RowBox[{
       AdjustmentBox[
       "\[VerticalSeparator]", BoxMargins -> {{-0.2, 0}, {0, 0}}, 
        BoxBaselineShift -> -0.1], 
       AdjustmentBox[
        TagBox[
        "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
         BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
       "\[RightAngleBracket]"}], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]], 
    QuantumAlgebra`QuantumAlgebra`Ket, BaseStyle -> "KetWrapper"], "dbra" -> 
  TagBox[
    RowBox[{
      SubscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      RowBox[{"\[LeftAngleBracket]", 
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        AdjustmentBox[
        "\[VerticalSeparator]", BoxMargins -> {{0, -0.2}, {0, 0}}, 
         BoxBaselineShift -> -0.1]}]}], QuantumAlgebra`QuantumAlgebra`Bra, 
    BaseStyle -> "BraWrapper"], "ubra" -> TagBox[
    RowBox[{
      SuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      RowBox[{"\[LeftAngleBracket]", 
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        AdjustmentBox[
        "\[VerticalSeparator]", BoxMargins -> {{0, -0.2}, {0, 0}}, 
         BoxBaselineShift -> -0.1]}]}], QuantumAlgebra`QuantumAlgebra`Bra, 
    BaseStyle -> "BraWrapper"], "dubra" -> TagBox[
    RowBox[{
      SubsuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      RowBox[{"\[LeftAngleBracket]", 
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        AdjustmentBox[
        "\[VerticalSeparator]", BoxMargins -> {{0, -0.2}, {0, 0}}, 
         BoxBaselineShift -> -0.1]}]}], QuantumAlgebra`QuantumAlgebra`Bra, 
    BaseStyle -> "BraWrapper"], "braketd" -> TagBox[
    SubscriptBox[
     RowBox[{"\[LeftAngleBracket]", 
       AdjustmentBox[
        RowBox[{
          TagBox[
          "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs,
            BaseStyle -> "BraKetArg"], "\[VerticalSeparator]", 
          TagBox[
          "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs,
            BaseStyle -> "BraKetArg"]}], BoxBaselineShift -> 0], 
       "\[RightAngleBracket]"}], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "braketu" -> TagBox[
    SuperscriptBox[
     RowBox[{"\[LeftAngleBracket]", 
       AdjustmentBox[
        RowBox[{
          TagBox[
          "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs,
            BaseStyle -> "BraKetArg"], "\[VerticalSeparator]", 
          TagBox[
          "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs,
            BaseStyle -> "BraKetArg"]}], BoxBaselineShift -> 0], 
       "\[RightAngleBracket]"}], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "braketdu" -> TagBox[
    SubsuperscriptBox[
     RowBox[{"\[LeftAngleBracket]", 
       AdjustmentBox[
        RowBox[{
          TagBox[
          "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs,
            BaseStyle -> "BraKetArg"], "\[VerticalSeparator]", 
          TagBox[
          "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs,
            BaseStyle -> "BraKetArg"]}], BoxBaselineShift -> 0], 
       "\[RightAngleBracket]"}], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "dbraket" -> TagBox[
    RowBox[{
      SubscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      RowBox[{"\[LeftAngleBracket]", 
        AdjustmentBox[
         RowBox[{
           TagBox[
           "\[SelectionPlaceholder]", 
            QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
            "BraKetArg"], "\[VerticalSeparator]", 
           TagBox[
           "\[SelectionPlaceholder]", 
            QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
            "BraKetArg"]}], BoxBaselineShift -> 0], 
        "\[RightAngleBracket]"}]}], QuantumAlgebra`QuantumAlgebra`Braket, 
    BaseStyle -> "BraKetWrapper"], "ubraket" -> TagBox[
    RowBox[{
      SuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      RowBox[{"\[LeftAngleBracket]", 
        AdjustmentBox[
         RowBox[{
           TagBox[
           "\[SelectionPlaceholder]", 
            QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
            "BraKetArg"], "\[VerticalSeparator]", 
           TagBox[
           "\[SelectionPlaceholder]", 
            QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
            "BraKetArg"]}], BoxBaselineShift -> 0], 
        "\[RightAngleBracket]"}]}], QuantumAlgebra`QuantumAlgebra`Braket, 
    BaseStyle -> "BraKetWrapper"], "dubraket" -> TagBox[
    RowBox[{
      SubsuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      RowBox[{"\[LeftAngleBracket]", 
        AdjustmentBox[
         RowBox[{
           TagBox[
           "\[SelectionPlaceholder]", 
            QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
            "BraKetArg"], "\[VerticalSeparator]", 
           TagBox[
           "\[SelectionPlaceholder]", 
            QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
            "BraKetArg"]}], BoxBaselineShift -> 0], 
        "\[RightAngleBracket]"}]}], QuantumAlgebra`QuantumAlgebra`Braket, 
    BaseStyle -> "BraKetWrapper"], "dbraketd" -> TagBox[
    RowBox[{
      SubscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SubscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "dbraketu" -> TagBox[
    RowBox[{
      SubscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "ubraketd" -> TagBox[
    RowBox[{
      SuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SubscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "ubraketu" -> TagBox[
    RowBox[{
      SuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "dbraketdu" -> TagBox[
    RowBox[{
      SubscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SubsuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "ubraketdu" -> TagBox[
    RowBox[{
      SuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SubsuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "dubraketd" -> TagBox[
    RowBox[{
      SubsuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          TagStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SubscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "dubraketu" -> TagBox[
    RowBox[{
      SubsuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          TagStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "dubraketdu" -> TagBox[
    RowBox[{
      SubsuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0.], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0.], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SubsuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0.], 
         "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0.], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0.], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "com" -> SubscriptBox[
    RowBox[{"[", 
      RowBox[{"\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]"}], 
      "]"}], "-"], "op" -> OverscriptBox["\[SelectionPlaceholder]", "^"], 
  "opd" -> SubscriptBox[
    OverscriptBox["\[SelectionPlaceholder]", "^"], "\[SelectionPlaceholder]"],
   "opu" -> TagBox[
    SuperscriptBox[
     OverscriptBox["\[SelectionPlaceholder]", "^"], 
     "\[SelectionPlaceholder]"], 
    QuantumAlgebra`QuantumAlgebra`Private`superscript], "opdu" -> TagBox[
    SubsuperscriptBox[
     OverscriptBox["\[SelectionPlaceholder]", "^"], "\[SelectionPlaceholder]",
      "\[SelectionPlaceholder]"], 
    QuantumAlgebra`QuantumAlgebra`Private`superscript], "hop" -> 
  SuperscriptBox[
    OverscriptBox["\[SelectionPlaceholder]", "^"], "\[Dagger]"]},
Magnification->1.,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (March 5, 2013)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "QAStyles.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Bra Ket Styles", "Section"], 
      Cell[
      " The cells below define certain styles needed for defining Bras&Kets. \
These styles serve to give the correct structural properties to Bras & Kets ",
        "Text"], 
      Cell[
       StyleData["BraKetArg"], SpanMinSize -> Automatic, StyleMenuListing -> 
       None, AdjustmentBoxOptions -> {BoxMargins -> {{0, 0}, {0, 0}}}, 
       TagBoxOptions -> {Editable -> True, Selectable -> True}], 
      Cell[
       StyleData["BraWrapper"], 
       AutoStyleOptions -> {"HighlightSyntaxErrors" -> False}, 
       ScriptBaselineShifts -> {0.6, 0.9}, SpanMinSize -> 1.5, 
       StyleMenuListing -> None, 
       AdjustmentBoxOptions -> {
        BoxBaselineShift -> -0.01, BoxMargins -> {{0.2, -0.13}, {0, 0}}}, 
       TagBoxOptions -> {Editable -> False}], 
      Cell[
       StyleData["KetWrapper"], 
       AutoStyleOptions -> {"HighlightSyntaxErrors" -> False}, 
       ScriptBaselineShifts -> {0.6, 0.9}, SpanMinSize -> 1.5, 
       StyleMenuListing -> None, 
       AdjustmentBoxOptions -> {
        BoxBaselineShift -> -0.01, BoxMargins -> {{-0.2, 0.2}, {0, 0}}}, 
       TagBoxOptions -> {Editable -> False}], 
      Cell[
       StyleData["BraKetWrapper"], ScriptBaselineShifts -> {0.6, 0.9}, 
       SpanMinSize -> 1.5, StyleMenuListing -> None, 
       AdjustmentBoxOptions -> {BoxMargins -> {{0.25, 0.25}, {0, 0}}}, 
       TagBoxOptions -> {Editable -> False}], 
      Cell[
       StyleData["RIndex"], StyleMenuListing -> None, 
       AdjustmentBoxOptions -> {BoxMargins -> {{-0.16, 0}, {0, 0}}}, 
       TagBoxOptions -> {Editable -> False}], 
      Cell[
       StyleData["LIndex"], StyleMenuListing -> None, 
       AdjustmentBoxOptions -> {BoxMargins -> {{0, -0.1}, {0, 0}}}, 
       TagBoxOptions -> {Editable -> False}]}, Closed]]}, Visible -> False, 
  FrontEndVersion -> "9.0 for Microsoft Windows (64-bit) (March 5, 2013)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "qa:I.0"->{
  Cell[567, 22, 52, 1, 99, "Section",
   CellTags->"qa:I.0"]},
 "qa:I.1"->{
  Cell[644, 27, 127, 2, 60, "Subsection",
   CellTags->"qa:I.1"]},
 "b:0.0"->{
  Cell[774, 31, 1249, 24, 77, "Text",
   CellTags->"b:0.0"],
  Cell[2269, 65, 129, 2, 41, "Input",
   CellTags->"b:0.0"],
  Cell[2401, 69, 241, 4, 41, "Output",
   CellTags->"b:0.0"],
  Cell[2679, 78, 125, 2, 41, "Input",
   CellTags->"b:0.0"],
  Cell[2807, 82, 213, 3, 41, "Output",
   CellTags->"b:0.0"]},
 "b:0.1"->{
  Cell[2026, 57, 218, 4, 19, "Caption",
   CellTags->"b:0.1"],
  Cell[3134, 94, 679, 13, 55, "Text",
   CellTags->"b:0.1"],
  Cell[3816, 109, 162, 3, 50, "InputOnly",
   CellTags->"b:0.1"],
  Cell[3981, 114, 1152, 19, 121, "Text",
   CellTags->"b:0.1"],
  Cell[5136, 135, 975, 18, 55, "Text",
   CellTags->"b:0.1"],
  Cell[92009, 1595, 787, 16, 33, "Text",
   CellTags->"b:0.1"],
  Cell[92821, 1615, 249, 5, 41, "Input",
   CellTags->"b:0.1"],
  Cell[93073, 1622, 11421, 316, 524, "Print",
   CellTags->"b:0.1"],
  Cell[104509, 1941, 605, 14, 55, "Text",
   CellTags->"b:0.1"],
  Cell[105139, 1959, 348, 7, 41, "Input",
   CellTags->"b:0.1"],
  Cell[105490, 1968, 619, 9, 192, "Print",
   CellTags->{"b:0.1", "Info3444434187-6347518"}]},
 "qa:I.2"->{
  Cell[3069, 91, 62, 1, 60, "Subsection",
   CellTags->"qa:I.2"]},
 "qa:I.3"->{
  Cell[6148, 158, 129, 2, 60, "Subsection",
   CellTags->"qa:I.3"]},
 "qa:I.4"->{
  Cell[91941, 1592, 65, 1, 60, "Subsection",
   CellTags->"qa:I.4"]},
 "Info3444434187-6347518"->{
  Cell[105490, 1968, 619, 9, 192, "Print",
   CellTags->{"b:0.1", "Info3444434187-6347518"}]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"qa:I.0", 133965, 2631},
 {"qa:I.1", 134041, 2634},
 {"b:0.0", 134120, 2637},
 {"b:0.1", 134440, 2648},
 {"qa:I.2", 135191, 2671},
 {"qa:I.3", 135271, 2674},
 {"qa:I.4", 135353, 2677},
 {"Info3444434187-6347518", 135452, 2680}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 52, 1, 99, "Section",
 CellTags->"qa:I.0"],
Cell[CellGroupData[{
Cell[644, 27, 127, 2, 60, "Subsection",
 CellTags->"qa:I.1"],
Cell[774, 31, 1249, 24, 77, "Text",
 CellTags->"b:0.0"],
Cell[2026, 57, 218, 4, 19, "Caption",
 CellTags->"b:0.1"],
Cell[CellGroupData[{
Cell[2269, 65, 129, 2, 41, "Input",
 CellTags->"b:0.0"],
Cell[2401, 69, 241, 4, 41, "Output",
 CellTags->"b:0.0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2679, 78, 125, 2, 41, "Input",
 CellTags->"b:0.0"],
Cell[2807, 82, 213, 3, 41, "Output",
 CellTags->"b:0.0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3069, 91, 62, 1, 60, "Subsection",
 CellTags->"qa:I.2"],
Cell[3134, 94, 679, 13, 55, "Text",
 CellTags->"b:0.1"],
Cell[3816, 109, 162, 3, 50, "InputOnly",
 CellTags->"b:0.1"],
Cell[3981, 114, 1152, 19, 121, "Text",
 CellTags->"b:0.1"],
Cell[5136, 135, 975, 18, 55, "Text",
 CellTags->"b:0.1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6148, 158, 129, 2, 60, "Subsection",
 CellTags->"qa:I.3"],
Cell[6280, 162, 608, 15, 99, "Text"],
Cell[6891, 179, 84421, 1390, 407, "Text"],
Cell[91315, 1571, 291, 8, 33, "Text"],
Cell[91609, 1581, 295, 6, 71, "InputOnly"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91941, 1592, 65, 1, 60, "Subsection",
 CellTags->"qa:I.4"],
Cell[92009, 1595, 787, 16, 33, "Text",
 CellTags->"b:0.1"],
Cell[CellGroupData[{
Cell[92821, 1615, 249, 5, 41, "Input",
 CellTags->"b:0.1"],
Cell[93073, 1622, 11421, 316, 524, "Print",
 CellTags->"b:0.1"]
}, Open  ]],
Cell[104509, 1941, 605, 14, 55, "Text",
 CellTags->"b:0.1"],
Cell[CellGroupData[{
Cell[105139, 1959, 348, 7, 41, "Input",
 CellTags->"b:0.1"],
Cell[105490, 1968, 619, 9, 192, "Print",
 CellTags->{"b:0.1", "Info3444434187-6347518"}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
